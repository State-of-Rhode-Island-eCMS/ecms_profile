# Runs and tests the develop.sh script
---
name: Test the Ecms Profile
on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
#  test:
#    runs-on: ubuntu-20.04
#    container:
#      image: php:7.3-apache
#      ports:
#        - 80:80
#      options: --network-alias=appserver
#    env:
#      SIMPLETEST_DB: sqlite://web/.ht.sqlite
#      SIMPLETEST_BASE_URL: http://appserver
#      DTT_BASE_URL: http://appserver
#    steps:
#      - name: Test
#        run: |
#          cd /var/www/
#          rm -Rf html
#      - name: Run the develop CI script.
#        run: ./scripts/develop-ci.sh

  build:
    name: Build Drupal.
    runs-on: ubuntu-latest
    env:
      drupal-directory: ../develop-ecms-profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run the develop CI script.
        run: ./scripts/develop-ci.sh

      - name: Set the full working directory environment variable.
        run: |
          echo "$( realpath ${{ env.drupal-directory }} )"

      - name: Set full path to the drupal build directory.
        run: echo "drupal-directory=$( realpath ${{ env.drupal-directory }} )" >> $GITHUB_ENV

      - name: Check coding standards.
        working-directory: ${{ env.drupal-directory }}
        run: ./vendor/bin/phpcs --standard=../ecms_profile/phpcs.xml

      - name: Archive the Drupal files.
        working-directory: ${{ env.drupal-directory }}
        run: tar -czf /tmp/drupal-build.tar.gz .

#      - name: Run unit tests.
#        working-directory: ${{ env.drupal-directory }}
#        run: ./vendor/bin/phpunit --configuration=../ecms_profile/phpunit-ci.xml --testsuite=unit

      - uses: actions/upload-artifact@v2
        with:
          name: drupal-build
          path: /tmp/drupal-build.tar.gz

#  test-php-73:
#    name: Test the site with PHP 7.3
#    needs: build
#    runs-on: ubuntu-latest
#    container:
#      image: drupalci/php-7.3.x-apache:production
#      ports:
#        - 80:80
#      options: --network-alias=appserver
#    env:
#      SIMPLETEST_DB: sqlite://web/.ht.sqlite
#      SIMPLETEST_BASE_URL: http://localhost
#      DTT_BASE_URL: http://localhost
#    steps:
#      - name: Retrieve the build artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: drupal-build.tar.gz
#          path: /var/www/html
#
#      - name: Expand the build artifact in the webroot
#        run: tar -xzf /var/www/html/drupal-build.tar.gz


#      - name: Install the site.
#        run: |
#          cd ../develop-ecms-profile
#          ./vendor/bin/drush si --db-url=sqlite://web/.ht.sqlite --yes
#
#      - name: Start php built in web server.
#        run: |
#          cd ../develop-ecms-profile
#          php -S localhost:4000 web/index.php
#
#      - name: Run functional tests.
#        run: |
#          cd ../develop-ecms-profile
#          export ENCRYPTION_PRIVATE_KEY=$(dd if=/dev/urandom bs=32 count=1 | base64 -i -)
#          ./vendor/bin/phpunit --configuration=../ecms_profile/phpunit-ci.xml --testsuite=functional

#      - name: Prepare environment for Lando use
#        run: |
#          mkdir -p ~/.ssh
#
#      - name: Install Lando
#        run: |
#          pushd /tmp
#          wget https://files.devwithlando.io/lando-stable.deb
#          sudo dpkg -i --ignore-depends=docker-ce lando-stable.deb
#          popd
#
#      - name: Print directory.
#        run: |
#          pwd
#
##      - name: Cache the lando environment
##        id: lando-cache
##        run: |
##            echo "::set-output name=dir::/home/runner/work/ecms_profile/develop-ecms-profile"
##
##      - uses: actions/cache@v2
##        with:
##          path: ${{ steps.lando-cache.outputs.dir }}
##          key: ${{ runner.os }}-composer-${{ hashFiles('/home/runner/work/ecms_profile/ecms_profile/composer.json') }}
#
#      - name: Run the development script (if not cached)
#        run: ./scripts/develop.sh
##        if: steps.lando-cache.outputs.cache-hit != 'true'
##
##      - name: Restore the lando environment from cache
##        run: |
##          cd ../develop-ecms-profile
##          lando start
##          lando drush si ecms_base --yes
##        if: steps.lando-cache.outputs.cache-hit == 'true'
#
#      - name: Check coding standards.
#        run: |
#          cd ../develop-ecms-profile
#          lando phpcs
#
#      - name: Run gulp validate.
#        run: |
#          cd ../develop-ecms-profile
#          lando gulp-distro validate
#
#      - name: Run unit tests.
#        run: |
#          cd ../develop-ecms-profile
#          pwd
#          lando phpunit --testsuite=unit
#
##      - name: Run functional tests in parallel.
##        run: |
##          cd ../develop-ecms-profile
##          lando paratest -p4 --testsuite=functional /ecms_profile
##
##      - name: Run existing tests.
##        run: |
##          cd ../develop-ecms-profile
##          lando paratest -p4 --testsuite=existing --bootstrap=/app/vendor/weitzman/drupal-test-traits/src/bootstrap-fast.php /ecms_profile
