<?php

/**
 * @file
 * ecms_authentication.module
 */

declare(strict_types = 1);

use Drupal\user\UserInterface;

/**
 * Implements hook_openid_connect_pre_authorize().
 */
function ecms_authentication_openid_connect_pre_authorize($account, array $context): bool {
  $userGroups = [];

  // Get the user groups from the OIDC user information.
  if ($context['plugin_id'] === 'windows_aad' && !empty($context['userinfo']['groups']['value'])) {
    $userGroups = array_column($context['userinfo']['groups']['value'], 'displayName');
  }

  return \Drupal::service('ecms_user_authentication')->checkGroupAccess($userGroups);
}

/**
 * Implements hook_openid_connect_userinfo_save().
 */
function ecms_authentication_openid_connect_userinfo_save(UserInterface $account, array $context): void {
  if ($context['plugin_id'] !== 'windows_aad' || (!isset($context['user_data']['groups']) && !isset($context['userinfo']['groups']['value']))) {
    return;
  }

  // Get the active directory groups from the claim.
  $userAadGroups = array_column($context['userinfo']['groups']['value'], 'displayName');

  // Remove the drupal_admin group if the user doesn't belong to that group
  // in active directory.
  \Drupal::service('ecms_user_authentication')->removeAdminGroup($userAadGroups, $account);
}
