# Runs and tests the develop.sh script
---
name: Test the Ecms Profile
on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
env:
  DRUPAL_CORE: '^10.4'
  PHP_VERSION: '8.3'
  NODE_VERSION: '10.x'

jobs:
  build:
    name: Build Drupal.
    runs-on: ubuntu-latest
    env:
      DRUPAL_DIRECTORY: ../develop
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - drupal_core: '^10.4'
            experimental: false
          - drupal_core: '^11.1'
            experimental: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check PHP Version
        run: php -v

      - name: Run the develop CI script.
        env:
          DRUPAL_CORE: matrix.drupal_core
          PHP_VERSION: env.PHP_VERSION
        run: ./scripts/ci-develop-new.sh

      - name: Set the full working directory environment variable.
        run: |
          echo "$( realpath ${{ env.DRUPAL_DIRECTORY }} )"

      - name: Set full path to the Drupal build directory.
        run: echo "drupal-directory=$( realpath ${{ env.DRUPAL_DIRECTORY }} )" >> $GITHUB_ENV

      - name: Get the node dependencies.
        uses: actions/setup-node@v1
        with:
          node-version: env.NODE_VERSION

      - name: Install the profile node requirements.
        run: npm install

      - name: Run gulp validate.
        run: gulp validate

      - name: Run gulp build.
        run: gulp build

      - name: Archive the Drupal files.
        run: tar -czf /tmp/drupal-build-${{ matrix.drupal_core}}.tar.gz .

      - name: Upload the artifact.
        uses: actions/upload-artifact@v4
        with:
          name: drupal-build-${{ matrix.drupal_core}}.tar.gz
          path: /tmp/drupal-build.tar.gz

  test-php:
    name: Test the site with PHP
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - php_version: '8.3'
            drupal_core: '^10.4'
            experimental: false
#          - php_version: '8.4'
#            drupal_core: '^10.4'
#            experimental: true
          - php_version: '8.3'
            drupal_core: '^11.1'
            experimental: true
#          - php_version: '8.4'
#            drupal_core: '^11.1'
#            experimental: true
    container:
      image: drupalci/php-${{ matrix.php_version }}-apache:production
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 33306:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: yes
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
        options: --network-alias=database
    env:
      SIMPLETEST_DB: mysql://drupal:drupal@database/drupal
      SIMPLETEST_BASE_URL: http://localhost
      DTT_BASE_URL: http://localhost
      DRUPAL_DIRECTORY: /var/www/develop/web
      ECMS_PROFILE_DIRECTORY: /var/www/develop/web/profiles/contrib/ecms_profile
      ENCRYPTION_PRIVATE_KEY: ''
    steps:

      - name: Check PHP Version
        run: php -v

      - name: Retrieve the build artifact.
        uses: actions/download-artifact@v4
        with:
          name: drupal-build-${{ matrix.drupal_core}}.tar.gz
          path: /var/www/

      - name: Expand the build artifact.
        run: tar -xzf /var/www/drupal-build-${{ matrix.drupal_core}}.tar.gz -C /var/www && ls -l /var/www

      - name: Remove the original html directory.
        run: rm -Rf /var/www/html

      - name: Symlink the original html path to develop/web.
        run: ln -s /var/www/develop/web /var/www/html

      - name: Ensure a files directory exists.
        run: |
          mkdir /var/www/html/sites/default/files
          chmod -R 777 /var/www/html/sites/default/files
          mkdir /var/www/html/sites/simpletest
          chmod -R 777 /var/www/html/sites/simpletest

      - name: Set permissions on the web and vendor directories.
        run: chown -R www-data:www-data /var/www/html /var/www/develop/vendor

      - name: Start Apache
        run: service apache2 start

      - name: Set the encryption private key variable.
        run: echo "ENCRYPTION_PRIVATE_KEY=$( dd if=/dev/urandom bs=32 count=1 | base64 -i - )" >> $GITHUB_ENV

      - name: Check coding standards.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/phpcs --standard=/var/www/phpcs-ci.xml

      - name: Run unit tests.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/phpunit --configuration=/var/www/phpunit-ci.xml --testsuite=unit

      - name: Install the ecms base profile.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/drush site:install ecms_base --db-url=mysql://drupal:drupal@database:3306/drupal?module=mysql#tableprefix --yes --verbose

#      - name: Update settings.php
#        run: |
#          echo "\$settings['file_chmod_directory'] = 02775;" >> /var/www/html/sites/default/settings.php
#          echo "\$settings['file_temp_path'] = '/var/www/html/sites/default/files/tmp';" >> /var/www/html/sites/default/settings.php
#          echo "\$settings['file_public_path'] = '/var/www/html/sites/default/files';" >> /var/www/html/sites/default/settings.php

#      - name: Run functional tests.
#        working-directory: ${{ env.DRUPAL_DIRECTORY }}
#        run: sudo -u www-data -E ../vendor/bin/phpunit --configuration=${{ env.ECMS_PROFILE_DIRECTORY }}/phpunit-ci.xml --testsuite=functional

#      - name: Run functional tests with fastest.
#        working-directory: ${{ env.DRUPAL_DIRECTORY }}
#        run: find . -type f -iname "*Test.php" | grep "Functional" | sudo -u www-data -E /var/www/develop/vendor/liuggio/fastest/fastest "/var/www/develop/vendor/phpunit/phpunit/phpunit --configuration=/var/www/phpunit-ci.xml {};"
#
#      - name: Run existing site tests.
#        working-directory: ${{ env.DRUPAL_DIRECTORY }}
#        run: find . -type f -iname "*Test.php" | grep "ExistingSite" | sudo -u www-data -E /var/www/develop/vendor/liuggio/fastest/fastest "/var/www/develop/vendor/phpunit/phpunit/phpunit --bootstrap=/var/www/vendor/weitzman/drupal-test-traits/src/bootstrap-fast.php --configuration=/var/www/phpunit-ci.xml {};"
