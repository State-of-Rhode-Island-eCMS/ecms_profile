<?php

/**
 * @file
 * ecms_api_notification_publisher.module
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_insert() for the node entity.
 */
function ecms_api_notification_publisher_node_insert(EntityInterface $entity) {
  \Drupal::service('ecms_api_notification_publisher')->broadcastNotification($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update() for the node entity.
 */
function ecms_api_notification_publisher_node_update(EntityInterface $entity): void {
  \Drupal::service('ecms_api_notification_publisher')->broadcastNotification($entity);
}

/**
 * Implements hook_ENTITY_TYPE_translation_insert() for the node entity.
 */
function ecms_api_notification_publisher_node_translation_insert(EntityInterface $translation): void {
  \Drupal::service('ecms_api_notification_publisher')->broadcastNotification($translation);
  // Call the syndication service on translation insert.
  // Translation support currently requires the patch from here:
  // @see: https://www.drupal.org/project/drupal/issues/2794431#comment-13841477
  //\Drupal::service('ecms_api_publisher.syndicate')->syndicateNode($translation, 'UPDATE');
}


/**
 * @todo: Check if a notification is published on insert
 *   - if yes, syndicate the node
 * @todo: Check if a node has transitioned to published on update.
 *   - if published, syndicate the node.
 * @todo: On syndication, check if the node already exists on the site.
 *   - if exists, PATCH the node.
 *   - if not exists, post the node.
 *  @todo:
 */
