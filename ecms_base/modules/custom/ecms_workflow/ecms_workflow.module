<?php

/**
 * @file
 * ecms_workflow.module
 */

declare(strict_types=1);

use Drupal\ecms_workflow\EcmsWorkflowBundleCreate;
use Drupal\node\Entity\Node;
use Drupal\webform\WebformInterface;

/**
 * Implements hook_entity_bundle_create().
 *
 * When optional features (content types) are enabled on the site,
 * this will ensure they are assigned to the proper workflow.
 */
function ecms_workflow_entity_bundle_create($entity_type_id, $bundle) : void {
  // If we are dealing with nodes, add the correct permissions.
  if ($entity_type_id === 'node') {
    // Call the workflow service to update configuration.
    \Drupal::service('ecms_workflow.bundle_create')
      ->addContentTypeToWorkflow($bundle);

    if ($bundle === 'emergency_notification') {
      // @see RIGA-588.
      // Call the workflow service to update configuration.
      \Drupal::service('ecms_workflow.bundle_create')
        ->revokeRolePermissions(
          EcmsWorkflowBundleCreate::CONTENT_PUBLISHER_ROLE,
          $bundle
        );

      \Drupal::service('ecms_workflow.bundle_create')
        ->revokeRolePermissions(
          EcmsWorkflowBundleCreate::CONTENT_AUTHOR_ROLE,
          $bundle
        );

      \Drupal::service('ecms_workflow.bundle_create')
        ->revokeRolePermissions(
          EcmsWorkflowBundleCreate::SITE_ADMIN_ROLE,
          $bundle
        );
    }
  }

  // Set taxonomy permissions when a new bundle is created.
  if ($entity_type_id === 'taxonomy_term') {
    \Drupal::service('ecms_workflow.bundle_create')
      ->addTaxonomyTypePermissions($bundle);
  }

  if (function_exists('drupal_flush_all_caches')) {
    drupal_flush_all_caches();
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function ecms_workflow_webform_insert(WebformInterface $webform) : void {
  if (!defined('MAINTENANCE_MODE') || constant('MAINTENANCE_MODE') !== 'install') {
    $node = Node::create([
      'type' => 'webform',
      'title' => $webform->label(),
      'webform' => ['target_id' => $webform->id()],
    ]);
    $node->save();

    \Drupal::messenger()->addMessage(t('Webform node %label created.', ['%label' => $node->label()]));
  }
}
