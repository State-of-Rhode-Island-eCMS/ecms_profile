# Runs and tests the develop.sh script
---
name: Test the Ecms Profile
on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
#  test:
#    runs-on: ubuntu-20.04
#    container:
#      image: php:7.3-apache
#      ports:
#        - 80:80
#      options: --network-alias=appserver
#    env:
#      SIMPLETEST_DB: sqlite://web/.ht.sqlite
#      SIMPLETEST_BASE_URL: http://appserver
#      DTT_BASE_URL: http://appserver
#    steps:
#      - name: Test
#        run: |
#          cd /var/www/
#          rm -Rf html
#      - name: Run the develop CI script.
#        run: ./scripts/develop-ci.sh

#  setup:
#    name: Container setup test
#    runs-on: ubuntu-latest
#    container:
#      image: php:7.3-apache
#    #      ports:
#    #        - 80:80
#    #      options: --network-alias=appserver
#    env:
#      SIMPLETEST_DB: sqlite://sites/default/files/.ht.sqlite
#      SIMPLETEST_BASE_URL: http://localhost
#      DTT_BASE_URL: http://localhosts
#      DRUPAL_DIRECTORY: /var/www/html
#      ECMS_PROFILE_DIRECTORY: /var/www/html/profiles/contrib/ecms_profile
#      ENCRYPTION_PRIVATE_KEY: ''
#    steps:
#      - name: Add index file.
#        run: echo "This is a test" >> /var/www/html/index.html
#      - name: Test curl.
#        run: |
#          service apache2 start
#          sleep 5
#          ls -lha /var/www/html
#          curl -v http://localhost/
#          curl -v http://127.0.0.1/

  build:
    name: Build Drupal.
    runs-on: ubuntu-latest
#    needs: setup
    env:
      DRUPAL_DIRECTORY: ../develop-ecms-profile
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run the develop CI script.
        run: ./scripts/develop-ci.sh

      - name: Set the full working directory environment variable.
        run: |
          echo "$( realpath ${{ env.DRUPAL_DIRECTORY }} )"

      - name: Set full path to the Drupal build directory.
        run: echo "drupal-directory=$( realpath ${{ env.DRUPAL_DIRECTORY }} )" >> $GITHUB_ENV

      - name: Remove the ecms_profile symlink.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: rm -Rf web/profiles/contrib/ecms_profile

      - name: Copy the ecms_profile into Drupal.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: cp -Rf ../ecms_profile web/profiles/contrib

#      - name: Check coding standards.
#        working-directory: ${{ env.drupal-directory }}
#        run: ./vendor/bin/phpcs --standard=../ecms_profile/phpcs.xml

      - name: Archive the Drupal files.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: tar -czf /tmp/drupal-build.tar.gz .

#      - name: Run unit tests.
#        working-directory: ${{ env.drupal-directory }}
#        run: ./vendor/bin/phpunit --configuration=../ecms_profile/phpunit-ci.xml --testsuite=unit

      - name: Upload the artifact.
        uses: actions/upload-artifact@v2
        with:
          name: drupal-build.tar.gz
          path: /tmp/drupal-build.tar.gz

  test-php-73:
    name: Test the site with PHP 7.3
    needs: build
    runs-on: ubuntu-latest
    container:
      image: drupalci/php-7.3-apache:production
#      ports:
#        - 80:80
#      options: --network-alias=appserver
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 33306:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: yes
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
        options: --network-alias=database
    env:
      SIMPLETEST_DB: mysql://drupal:drupal@database/drupal
      SIMPLETEST_BASE_URL: http://localhost
      DTT_BASE_URL: http://localhost
      DRUPAL_DIRECTORY: /var/www/html
      ECMS_PROFILE_DIRECTORY: /var/www/html/profiles/contrib/ecms_profile
      ENCRYPTION_PRIVATE_KEY: ''
    steps:
      - name: Retrieve the build artifact.
        uses: actions/download-artifact@v2
        with:
          name: drupal-build.tar.gz
          path: /var/www/

      - name: Expand the build artifact.
        run: tar -xzf /var/www/drupal-build.tar.gz -C /var/www

      - name: Remove the original html directory.
        run: rm -Rf /var/www/html

      - name: Symlink the original html path to web.
        run: ln -s /var/www/web /var/www/html

      - name: Ensure a files directory exists.
        run: |
          mkdir /var/www/html/sites/default/files
          chmod -R 777 /var/www/html/sites/default/files
          mkdir /var/www/html/sites/simpletest
          chmod -R 777 /var/www/html/sites/simpletest

      - name: Set permissions on the web and vendor directories.
        run: chown -R www-data:www-data /var/www/html /var/www/vendor

      - name: Start Apache
        run: service apache2 start

      - name: Set the encryption private key variable.
        run: echo "ENCRYPTION_PRIVATE_KEY=$( dd if=/dev/urandom bs=32 count=1 | base64 -i - )" >> $GITHUB_ENV

      - name: Check coding standards.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/phpcs --standard=${{ env.ECMS_PROFILE_DIRECTORY }}/phpcs-ci.xml

      - name: Run unit tests.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/phpunit --configuration=${{ env.ECMS_PROFILE_DIRECTORY }}/phpunit-ci.xml --testsuite=unit

      - name: Install the ecms base profile.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/drush si ecms_base --db-url=${{ env.SIMPLETEST_DB }} --yes

      - name: Update settings.php
        run: echo "\$settings['file_chmod_directory'] = 02775;" >> /var/www/html/sites/default/settings.php

      - name: Run existing site tests.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/paratest -p4 --testsuite=existing --runner=WrapperRunner --bootstrap=/var/www/vendor/weitzman/drupal-test-traits/src/bootstrap.php ${{ env.ECMS_PROFILE_DIRECTORY }}

      - name: Run functional tests.
        working-directory: ${{ env.DRUPAL_DIRECTORY }}
        run: ../vendor/bin/paratest -p4 --testsuite=functional --runner=WrapperRunner --bootstrap=/var/www/vendor/weitzman/drupal-test-traits/src/bootstrap.php ${{ env.ECMS_PROFILE_DIRECTORY }}

#      - name: Prepare environment for Lando use
#        run: |
#          mkdir -p ~/.ssh
#
#      - name: Install Lando
#        run: |
#          pushd /tmp
#          wget https://files.devwithlando.io/lando-stable.deb
#          sudo dpkg -i --ignore-depends=docker-ce lando-stable.deb
#          popd
#
#      - name: Print directory.
#        run: |
#          pwd
#
##      - name: Cache the lando environment
##        id: lando-cache
##        run: |
##            echo "::set-output name=dir::/home/runner/work/ecms_profile/develop-ecms-profile"
##
##      - uses: actions/cache@v2
##        with:
##          path: ${{ steps.lando-cache.outputs.dir }}
##          key: ${{ runner.os }}-composer-${{ hashFiles('/home/runner/work/ecms_profile/ecms_profile/composer.json') }}
#
#      - name: Run the development script (if not cached)
#        run: ./scripts/develop.sh
##        if: steps.lando-cache.outputs.cache-hit != 'true'
##
##      - name: Restore the lando environment from cache
##        run: |
##          cd ../develop-ecms-profile
##          lando start
##          lando drush si ecms_base --yes
##        if: steps.lando-cache.outputs.cache-hit == 'true'
#
#      - name: Check coding standards.
#        run: |
#          cd ../develop-ecms-profile
#          lando phpcs
#
#      - name: Run gulp validate.
#        run: |
#          cd ../develop-ecms-profile
#          lando gulp-distro validate
#
#      - name: Run unit tests.
#        run: |
#          cd ../develop-ecms-profile
#          pwd
#          lando phpunit --testsuite=unit
#
##      - name: Run functional tests in parallel.
##        run: |
##          cd ../develop-ecms-profile
##          lando paratest -p4 --testsuite=functional /ecms_profile
##
##      - name: Run existing tests.
##        run: |
##          cd ../develop-ecms-profile
##          lando paratest -p4 --testsuite=existing --bootstrap=/app/vendor/weitzman/drupal-test-traits/src/bootstrap-fast.php /ecms_profile
