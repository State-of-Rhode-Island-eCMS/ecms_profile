<?php

/**
 * @file
 * Functions to support theming in the eCMS theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ecms_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }
}

/**
 * Implements hook_preprocess_page().
 */
function ecms_preprocess_page(&$variables) {

  // Attach header variables.
  $variables['header_preprocess_values']['top_line'] = theme_get_setting('header_top_line');
  $variables['header_preprocess_values']['main_line'] = theme_get_setting('header_main_line');
  $variables['header_preprocess_values']['bottom_line'] = theme_get_setting('header_bottom_line');

  // Attach footer variables.
  $variables['footer_preprocess_values']['footer_left'] = theme_get_setting('footer_left')['value'];
  $variables['footer_preprocess_values']['footer_center'] = theme_get_setting('footer_center')['value'];
  $variables['footer_preprocess_values']['footer_right'] = theme_get_setting('footer_right')['value'];
  $variables['footer_preprocess_values']['state_info'] = theme_get_setting('footer_state_info')['value'];
}

/**
 * Implements hook_preprocess_html().
 */
function ecms_preprocess_html(&$variables) {

  // Add paletteClass from theme settings form.
  $paletteClass = 'qh__t__' . theme_get_setting('color_palette');
  $variables['attributes']['class'][] = $paletteClass;
}

/**
 * Implements hook_theme().
 */
function ecms_theme($existing, $type, $theme, $path): array {
  $templates = [];
  if ($theme === 'ecms') {
    // Workaround for the core bug found here:
    // https://www.drupal.org/project/drupal/issues/3071201
    // html.twig files were being discovered outside of the templates directory.
    $templates = drupal_find_theme_functions($existing, [$theme]);
    $templates += drupal_find_theme_templates($existing, '.html.twig', "{$path}/templates");
  }
  return $templates;
}

/**
 * Implements hook_preprocess_paragaph().
 */
function ecms_preprocess_paragraph__media_item(&$variables) {
  $paragraph = $variables['paragraph'];

  $media_type = $paragraph->field_media_item->entity->bundle();

  if ($media_type === 'media_item_image') {
    $variables['media_type'] = 'img';

    $image = $paragraph->get('field_media_item')->entity->get('field_media_item_image');

    if (isset($image->entity->uri)) {
      $variables['image_url'] = file_create_url($image->entity->uri->value);
    }
  }

  if ($media_type === 'media_item_video') {
    $variables['media_type'] = 'video';
  }
}
